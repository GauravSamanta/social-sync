generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id        String    @id @default(uuid())
  userId    String    @unique
  name      String
  email     String    @db.Text
  imageUrl  String    @db.Text
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  server    Server[]
  member    Member[]
  channels  Channel[]
}

model Server {
  id           String @id @default(uuid())
  name         String
  imgUrl       String @db.Text
  inviteString String @db.Text

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String

  members  Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

enum Roles {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id   String @id @default(uuid())
  role Roles  @default(GUEST)

  serverID String
  server   Server @relation(fields: [serverID], references: [id], onDelete: Cascade)

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverID])
}

enum ChannelType {
  TEXT
  VOICE
  VIDEO
}

model Channel {
  id   String      @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}
